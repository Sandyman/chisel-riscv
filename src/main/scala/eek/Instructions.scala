package eek

import chisel3.util.BitPat

object Instructions {
    // I-type instructions
    def ADDI            = BitPat("b?????????????????000?????0010011")
    def SLTI            = BitPat("b?????????????????010?????0010011")
    def SLTIU           = BitPat("b?????????????????011?????0010011")
    def XORI            = BitPat("b?????????????????100?????0010011")
    def ORI             = BitPat("b?????????????????110?????0010011")
    def ANDI            = BitPat("b?????????????????111?????0010011")
    def SLLI            = BitPat("b0000000??????????001?????0010011")
    def SRLI            = BitPat("b0000000??????????101?????0010011")
    def SRAI            = BitPat("b0100000??????????101?????0010011")

    // R-type instructions
    def ADD             = BitPat("b0000000??????????000?????0110011")
    def SUB             = BitPat("b0100000??????????000?????0110011")
    def SLL             = BitPat("b0000000??????????001?????0110011")
    def SLT             = BitPat("b0000000??????????010?????0110011")
    def SLTU            = BitPat("b0000000??????????011?????0110011")
    def XOR             = BitPat("b0000000??????????100?????0110011")
    def SRL             = BitPat("b0000000??????????101?????0110011")
    def SRA             = BitPat("b0100000??????????101?????0110011")
    def OR              = BitPat("b0000000??????????110?????0110011")
    def AND             = BitPat("b0000000??????????111?????0110011")

    // NOP encoded as ADD x0, x0, x0
    def NOP             = BitPat("b00000000000000000000000000110011")
}
